{"version":3,"sources":["components/header.js","components/scorePanel/stars.js","components/scorePanel/moves.js","components/scorePanel/timer.js","components/scorePanel/restartButton.js","components/scorePanel.js","components/deck.js","components/modal.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Component","Stars","renderStars","display","i","push","key","className","_this","props","stars","this","Moves","moves","Timer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","clockTick","bind","assertThisInitialized","_this$props$timer","timer","seconds","minutes","concat","lib_default","timeout","callback","enabled","RestartButton","restart","onClick","ScorePanel","_this$props$state","state","playing","scorePanel_stars","scorePanel_moves","scorePanel_timer","restartButton","Deck","flipCard","_this2","_this$props","cards","firstCard","secondCard","map","card","id","face","matched","index_es","icon","Modal","hideModal","time","modalShown","class","App","shuffleCards","temp","faces","toConsumableArray","length","random","Math","floor","uuid","v4","splice","startClock","setState","prevState","_prevState$timer","secs","addMove","move","_this$state","filter","crd","setTimeout","endTurn","endGame","showModal","restartGame","react_router_dom","basename","header","scorePanel","deck","modal","Boolean","window","location","hostname","match","library","add","fab","faCoffee","faPaperPlane","faAnchor","faBolt","faCube","faLeaf","faBicycle","faBomb","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.187b7dc0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1>Matching Game</h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Stars extends Component {\r\n\r\n    renderStars = () =>{\r\n        let display = []\r\n\r\n        for(let i = 0; i < 3; i++){\r\n            display.push(\r\n                <li key={i}>\r\n                    <i className={i >= this.props.stars ? \"fa fa-star\" : \"fa fa-star gold\"}></i>\r\n                </li>\r\n            )\r\n        }\r\n\r\n        return display\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"stars\">\r\n                {this.renderStars()}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stars;","import React, { Component } from 'react';\r\n\r\nclass Moves extends Component {\r\n    render() {\r\n        const {moves} = this.props;\r\n        \r\n        return (\r\n            <p className=\"moves-para\">\r\n                <span className=\"moves\">{moves}</span> {moves === 1 ? 'Move' : 'Moves'} \r\n            </p>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Moves;","import React, { Component } from 'react';\r\nimport Interval from 'react-interval';\r\n\r\nclass Timer extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.clockTick = props.clockTick.bind(this)\r\n    }    \r\n\r\n    render() {\r\n        const {seconds, minutes} = this.props.timer;\r\n        return (\r\n            <div>\r\n                {minutes < 10 ? `0${minutes}` : minutes}\r\n                :\r\n                {seconds < 10 ? `0${seconds}` : seconds}\r\n\r\n                <Interval\r\n                    timeout={1000}\r\n                    callback={this.clockTick}\r\n                    enabled={this.props.enabled}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;","import React, { Component } from 'react';\r\n\r\nclass RestartButton extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.restart = props.restart.bind(this)\r\n    }\r\n    render() {\r\n        return (\r\n            <button className=\"restart\"\r\n                    onClick={this.restart}>\r\n                <i className=\"fa fa-repeat\"></i>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RestartButton;","import React, { Component } from 'react';\r\n\r\nimport Stars from './scorePanel/stars';\r\nimport Moves from './scorePanel/moves';\r\nimport Timer from './scorePanel/timer';\r\nimport RestartButton from './scorePanel/restartButton';\r\n\r\nclass ScorePanel extends Component {\r\n    render() {\r\n        const {moves, timer, stars, playing} = this.props.state;\r\n        return (\r\n            <div className=\"score-panel\">\r\n                <Stars stars={stars}/>\r\n                <Moves moves={moves}/>\r\n                <Timer timer={timer} \r\n                        enabled={playing}\r\n                        clockTick={this.props.clockTick}\r\n                />\r\n                <RestartButton restart={this.props.restart}/>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScorePanel;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass Deck extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.flipCard = props.flipCard.bind(this)\r\n    }\r\n\r\n    render() {\r\n        const {cards, firstCard, secondCard} = this.props;\r\n        return (\r\n            <div>\r\n                <ul className=\"deck\">\r\n                    {cards.map((card) => {\r\n                        const {id, face, matched} = card;\r\n\r\n                        return (\r\n                            <li key={id} \r\n                                className={\r\n                                    (firstCard !== null && id === firstCard.id) || (secondCard !== null && id === secondCard.id)\r\n                                    ? \"card animated face-up\"  :   matched ? \r\n                                                                                \"card animated face-up matched\" : \"card animated\"\r\n                                }\r\n                                onClick={() => this.flipCard(id)}\r\n                            >\r\n                                <FontAwesomeIcon icon={face} />\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Deck;","import React, { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.hideModal = props.hideModal.bind(this)\r\n    }\r\n    render() {\r\n        const {moves, stars, time, modalShown} = this.props;\r\n        const {minutes, seconds} = time;\r\n\r\n        return (\r\n            <div className={modalShown ? \"modal\" : \"modal modal-hidden\"}>\r\n                <div className=\"modal-content\">\r\n                    <h1>Congratulations!</h1>\r\n                    <div class=\"game-info\">\r\n                        <p class=\"game-info-block\">Time:</p>\r\n                        <p class=\"game-info-block\">\r\n                            {minutes} minutes, {seconds} seconds\r\n                        </p>\r\n                        <p class=\"game-info-block\">Moves:</p>\r\n                        <p class=\"moves-span game-info-block\">{moves}</p>\r\n                        <p class=\"game-info-block\">Rating:</p>\r\n                        <p class=\"game-info-block\">\r\n                            {stars} stars</p>\r\n                    </div>\r\n                    <button class=\"close\"\r\n                            onClick={this.hideModal}\r\n                    >\r\n                        Close\r\n                    </button>\r\n                    <div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, {Component} from 'react';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport './App.css';\r\nimport uuid from 'uuid';\r\n\r\nimport Header from './components/header';\r\nimport ScorePannel from './components/scorePanel';\r\nimport Deck from './components/deck';\r\nimport Modal from './components/modal';\r\n\r\nclass App extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      moves: 0,\r\n      timer: {\r\n        minutes: 0,\r\n        seconds: 0\r\n      },\r\n      stars: 3,\r\n      faces: [\r\n        \"coffee\",\r\n        \"anchor\",\r\n        \"bolt\",\r\n        \"cube\",\r\n        \"leaf\",\r\n        \"bicycle\",\r\n        \"bomb\",\r\n        \"paper-plane\",\r\n        \"coffee\",\r\n        \"anchor\",\r\n        \"bolt\",\r\n        \"cube\",\r\n        \"leaf\",\r\n        \"bicycle\",\r\n        \"bomb\",\r\n        \"paper-plane\",\r\n      ],\r\n      cards: [],\r\n      firstCard: null,\r\n      secondCard: null,\r\n      playing: false,\r\n      modalShown: false\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const cards = this.shuffleCards();\r\n    this.setState({cards: cards})\r\n  }\r\n\r\n  shuffleCards = () => {\r\n    let temp = [], faces = [...this.state.faces];\r\n\r\n    while(faces.length > 0){\r\n      let random = Math.floor(Math.random() * faces.length);\r\n      temp.push({\r\n        id: uuid.v4(),\r\n        face: faces.splice(random, 1)[0],//Pulls a random element out of this.faces and pushes it to the temp array\r\n        matched: false\r\n      });\r\n    }\r\n\r\n    return temp;\r\n  }\r\n\r\n  startClock = ()=>{\r\n    this.setState({playing: true})\r\n  }\r\n\r\n  clockTick = () => {\r\n    this.setState(prevState => {\r\n      const {seconds, minutes} = prevState.timer;\r\n      let secs = seconds === 59 ? 0 : seconds + 1;\r\n\r\n      return {\r\n        timer: {\r\n          minutes: secs === 0 ? minutes + 1 : minutes,\r\n          seconds: secs\r\n        }\r\n      };\r\n    })\r\n  }\r\n\r\n  addMove = () =>{\r\n    this.setState(prevState =>{\r\n      const {moves, stars} = prevState;  \r\n      const move = moves + 1;\r\n\r\n      return {\r\n        moves: move,\r\n        stars:  move > 17 && move % 6 === 0  ? stars - 1 : stars\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  flipCard = (id) =>{\r\n      /*\r\n        Three possibilities:\r\n          1. There are no face-up cards (both firstCard and secondCard are null) - we want to set firstCard to the card that was flipped\r\n          2. There is one face-up card (only secondCard is null) - we want to set secondCard to the card that was flipped and end the turn\r\n          3. There are two face-up cards (neither are null) - we do not want to do anything\r\n      */\r\n    if(!this.state.playing){\r\n      this.setState({playing: true})\r\n    }\r\n    \r\n    const {secondCard} = this.state;\r\n    \r\n    if(secondCard === null){      //Options 1 or 2\r\n      const {firstCard, cards} = this.state\r\n      const card = cards.filter(crd => crd.id === id)[0];\r\n\r\n      if(firstCard === null){\r\n        this.setState({firstCard: card})\r\n      }else{\r\n        this.setState({secondCard: card})\r\n        setTimeout(this.endTurn, 1500)\r\n      }\r\n    }\r\n  }\r\n\r\n  endTurn = () =>{\r\n    this.setState(prevState =>{\r\n      const {firstCard, secondCard, cards, moves, stars} = prevState;\r\n      const move = moves + 1;\r\n\r\n      if(firstCard.face === secondCard.face){\r\n        cards.map(card => {\r\n          const {id} = card;\r\n          if(id === firstCard.id || id === secondCard.id){\r\n            card.matched = true;\r\n          }\r\n          return card\r\n        })\r\n      }\r\n\r\n      if(cards.filter(crd => crd.matched).length === 16){\r\n        this.endGame()\r\n      }\r\n\r\n      return {\r\n        cards: cards,\r\n        firstCard: null,\r\n        secondCard: null,\r\n        moves: move,\r\n        stars:  move >= 18 && move % 6 === 0  ? stars - 1 : stars\r\n      }\r\n    })\r\n  }\r\n\r\n  endGame = () => {\r\n    this.setState({playing: false});\r\n    this.showModal();\r\n  }\r\n\r\n  hideModal = () =>{\r\n    this.setState({modalShown: false});\r\n  }\r\n\r\n  showModal = () =>{\r\n    this.setState({modalShown: true});\r\n  }\r\n\r\n  restartGame = () =>{\r\n    const cards = this.shuffleCards();\r\n    \r\n    this.setState({\r\n      moves: 0,\r\n      stars: 3,\r\n      timer: {\r\n        minutes: 0,\r\n        seconds: 0\r\n      },\r\n      cards: cards,\r\n      firstCard: null,\r\n      secondCard: null,\r\n      playing: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n        <div className=\"container\">\r\n          <Header />\r\n          <ScorePannel state={this.state}\r\n                        restart={this.restartGame}\r\n                        clockTick = {this.clockTick}\r\n          />\r\n          <Deck addMove={this.addMove} \r\n                cards={this.state.cards}\r\n                firstCard = {this.state.firstCard}\r\n                secondCard = {this.state.secondCard}\r\n                flipCard = {this.flipCard}\r\n          />\r\n          <Modal \r\n            time={this.state.timer}\r\n            moves={this.state.moves}\r\n            stars={this.state.stars}\r\n            modalShown={this.state.modalShown}\r\n            hideModal={this.hideModal}\r\n          />\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport {faCoffee, faPaperPlane, faAnchor, faBolt, faCube, faLeaf, faBicycle, faBomb} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(fab, faCoffee, faPaperPlane, faAnchor, faBolt, faCube, faLeaf, faBicycle, faBomb)\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}